version: 2.1

orbs:
  cfa: continuousauth/npm@2.1.1
  node: electronjs/node@2.3.0

jobs:
  release:
    executor: << parameters.executor >>
    parameters:
      executor:
        type: executor
    steps:
      - node/install:
          node-version: '18.18'
      - checkout
      - node/install-packages
      - when:
          condition:
            equal: [ node/macos, << parameters.executor >> ]
          steps:
            - run:
                name: Build alternative architecture
                command: MINIDUMP_BUILD_ARCH=arm64 node build.js
      - store_artifacts:
          path: ./bin
      - persist_to_workspace:
          root: .
          paths:
            - bin

workflows:
  test_and_release:
    # Run the test jobs first, then the release only when all the test jobs are successful
    jobs:
      - node/test:
          name: test-<< matrix.executor >>-<< matrix.node-version >>
          pre-steps:
            - run: git config --global core.autocrlf input
          test-steps:
            - when:
                condition:
                  equal: [ node/macos, << matrix.executor >> ]
                steps:
                  - run:
                      name: Build alternative architecture
                      command: MINIDUMP_BUILD_ARCH=arm64 node build.js
            - run: yarn test
          use-test-steps: true
          matrix:
            alias: test
            parameters:
              executor:
                - node/linux
                - node/macos
                # - node/windows
              node-version:
                - '20.10'
                - '18.18'
                - '16.20'
                - '14.21'
            exclude:
              - executor: node/macos
                node-version: '14.21'
      - release:
          name: release-<< matrix.executor >>
          matrix:
            alias: release
            parameters:
              executor:
                - node/linux
                - node/macos
                # - node/windows
          filters:
            branches:
              only:
                - main
      - cfa/release:
          requires:
            - test
            - release
          filters:
            branches:
              only:
                - main
          context: cfa-release
          
